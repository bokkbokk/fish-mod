








//            // Get the transformation matrix from the matrix stack, alongside the tessellator instance and a new buffer builder.
//            Matrix4f transformationMatrix = drawContext.getMatrices().peek().getPositionMatrix();
//            Tessellator tessellator = Tessellator.getInstance();
//
//            // Begin a triangle strip buffer using the POSITION_COLOR vertex format.
//            BufferBuilder buffer = tessellator.begin(VertexFormat.DrawMode.TRIANGLE_STRIP, VertexFormats.POSITION_COLOR);
//
//            // Write our vertices, Z doesn't really matter since it's on the HUD.
//            buffer.vertex(transformationMatrix, 20, 20, 5).color(0xFF414141);
//            buffer.vertex(transformationMatrix, 5, 40, 5).color(0xFF000000);
//            buffer.vertex(transformationMatrix, 35, 40, 5).color(0xFF000000);
//            buffer.vertex(transformationMatrix, 20, 60, 5).color(0xFF414141);
//
//            // We'll get to this bit in the next section.
//            RenderSystem.setShader(GameRenderer::getPositionColorProgram);
//            RenderSystem.setShaderColor(1.0F, 1.0F, 1.0F, 1.0F);
//
//            // Draw the buffer onto the screen.
//            BufferRenderer.drawWithGlobalProgram(buffer.end());

            //redScreen = false;